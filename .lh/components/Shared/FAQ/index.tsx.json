{
    "sourceFile": "components/Shared/FAQ/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1695035485873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1695035517085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,12 @@\n import {PropsWithChildren, useState} from \"react\";\n import {motion, AnimatePresence} from \"framer-motion\"\n import Heading from \"@/components/Shared/Heading\";\n import Image from \"next/image\";\n+const {romanToArab, arabToRoman, isValidArab, isValidRoman} = require('roman-numbers')\n \n+import {arabToRoman} from \"roman-numbers\"\n+\n type Question = {\n    question: string,\n    answer: string,\n }\n"
                },
                {
                    "date": 1695035531669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,109 @@\n+import s from './index.module.scss'\n+import {transformIndex} from \"@/utils/transformIndex\";\n+import {PropsWithChildren, useState} from \"react\";\n+import {motion, AnimatePresence} from \"framer-motion\"\n+import Heading from \"@/components/Shared/Heading\";\n+import Image from \"next/image\";\n+import {arabToRoman} from \"roman-numbers\"\n+\n+type Question = {\n+   question: string,\n+   answer: string,\n+}\n+\n+type Faq = {\n+   heading: string,\n+   questions: Question [],\n+}\n+\n+function SingleQuestion({\n+                           content,\n+                           isLast,\n+                           index\n+                        }: PropsWithChildren<{ content: Question, isLast: boolean, index: number }>) {\n+   const [isOpen, setIsOpen] = useState(false);\n+\n+   const {question, answer} = content;\n+   console.log(arabToRoman(1));\n+   \n+   return (\n+      <div\n+         className={isLast ? s.singleQuestion : s.singleQuestionLast}\n+         onClick={() => setIsOpen((prev) => !prev)}\n+      >\n+         <div className={s.headingWrapper}>\n+            <p className={s.index}>{transformIndex(index + 1)}</p>\n+            <p className={s.heading}>{question}</p>\n+\n+            <Image\n+               alt=\"Photo\"\n+               src=\"/icons/triangle.png\"\n+               style={{transform: `rotate(${isOpen ? \"180deg\" : \"0\"})`, transition: '0.3s'}}\n+               width={10}\n+               height={10}\n+            />\n+         </div>\n+\n+         <AnimatePresence mode=\"wait\">\n+            {isOpen && (\n+               <motion.div\n+                  initial={{\n+                     height: 0,\n+                     opacity: 0,\n+                  }}\n+                  animate={{\n+                     height: \"auto\",\n+                     opacity: 1,\n+                     transition: {\n+                        height: {\n+                           duration: 0.4,\n+                        },\n+                        opacity: {\n+                           duration: 0.25,\n+                           delay: 0.15,\n+                        },\n+                     },\n+                  }}\n+                  exit={{\n+                     height: 0,\n+                     opacity: 0,\n+                     transition: {\n+                        height: {\n+                           duration: 0.4,\n+                        },\n+                        opacity: {\n+                           duration: 0.25,\n+                        },\n+                     },\n+                  }}\n+                  key=\"test\"\n+               >\n+                  <span className={s.desc}>{answer}</span>\n+               </motion.div>\n+            )}\n+         </AnimatePresence>\n+      </div>\n+   )\n+}\n+\n+\n+export default function Faq({content}: PropsWithChildren<{ content: Faq }>) {\n+   const {heading, questions} = content;\n+   return (\n+      // @ts-ignore\n+      <section className={s.wrapper} name={\"faq\"}>\n+         <Heading heading={heading} size={\"md\"}/>\n+\n+         <div className={s.questionsWrapper}>\n+            {questions.map((question: Question, index, arr) => (\n+               <SingleQuestion\n+                  key={index}\n+                  content={question}\n+                  isLast={index != arr.length - 1}\n+                  index={index}\n+               />\n+            ))}\n+         </div>\n+      </section>\n+   )\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1695035540546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,10 +23,8 @@\n                         }: PropsWithChildren<{ content: Question, isLast: boolean, index: number }>) {\n    const [isOpen, setIsOpen] = useState(false);\n \n    const {question, answer} = content;\n-   console.log(arabToRoman(1));\n-   \n    return (\n       <div\n          className={isLast ? s.singleQuestion : s.singleQuestionLast}\n          onClick={() => setIsOpen((prev) => !prev)}\n@@ -105,114 +103,5 @@\n             ))}\n          </div>\n       </section>\n    )\n-}\n-import s from './index.module.scss'\n-import {transformIndex} from \"@/utils/transformIndex\";\n-import {PropsWithChildren, useState} from \"react\";\n-import {motion, AnimatePresence} from \"framer-motion\"\n-import Heading from \"@/components/Shared/Heading\";\n-import Image from \"next/image\";\n-const {romanToArab, arabToRoman, isValidArab, isValidRoman} = require('roman-numbers')\n-\n-import {arabToRoman} from \"roman-numbers\"\n-\n-type Question = {\n-   question: string,\n-   answer: string,\n-}\n-\n-type Faq = {\n-   heading: string,\n-   questions: Question [],\n-}\n-\n-function SingleQuestion({\n-                           content,\n-                           isLast,\n-                           index\n-                        }: PropsWithChildren<{ content: Question, isLast: boolean, index: number }>) {\n-   const [isOpen, setIsOpen] = useState(false);\n-\n-   const {question, answer} = content;\n-   return (\n-      <div\n-         className={isLast ? s.singleQuestion : s.singleQuestionLast}\n-         onClick={() => setIsOpen((prev) => !prev)}\n-      >\n-         <div className={s.headingWrapper}>\n-            <p className={s.index}>{transformIndex(index + 1)}</p>\n-            <p className={s.heading}>{question}</p>\n-\n-            <Image\n-               alt=\"Photo\"\n-               src=\"/icons/triangle.png\"\n-               style={{transform: `rotate(${isOpen ? \"180deg\" : \"0\"})`, transition: '0.3s'}}\n-               width={10}\n-               height={10}\n-            />\n-         </div>\n-\n-         <AnimatePresence mode=\"wait\">\n-            {isOpen && (\n-               <motion.div\n-                  initial={{\n-                     height: 0,\n-                     opacity: 0,\n-                  }}\n-                  animate={{\n-                     height: \"auto\",\n-                     opacity: 1,\n-                     transition: {\n-                        height: {\n-                           duration: 0.4,\n-                        },\n-                        opacity: {\n-                           duration: 0.25,\n-                           delay: 0.15,\n-                        },\n-                     },\n-                  }}\n-                  exit={{\n-                     height: 0,\n-                     opacity: 0,\n-                     transition: {\n-                        height: {\n-                           duration: 0.4,\n-                        },\n-                        opacity: {\n-                           duration: 0.25,\n-                        },\n-                     },\n-                  }}\n-                  key=\"test\"\n-               >\n-                  <span className={s.desc}>{answer}</span>\n-               </motion.div>\n-            )}\n-         </AnimatePresence>\n-      </div>\n-   )\n-}\n-\n-\n-export default function Faq({content}: PropsWithChildren<{ content: Faq }>) {\n-   const {heading, questions} = content;\n-   return (\n-      // @ts-ignore\n-      <section className={s.wrapper} name={\"faq\"}>\n-         <Heading heading={heading} size={\"md\"}/>\n-\n-         <div className={s.questionsWrapper}>\n-            {questions.map((question: Question, index, arr) => (\n-               <SingleQuestion\n-                  key={index}\n-                  content={question}\n-                  isLast={index != arr.length - 1}\n-                  index={index}\n-               />\n-            ))}\n-         </div>\n-      </section>\n-   )\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1695035557614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n          className={isLast ? s.singleQuestion : s.singleQuestionLast}\n          onClick={() => setIsOpen((prev) => !prev)}\n       >\n          <div className={s.headingWrapper}>\n-            <p className={s.index}>{transformIndex(index + 1)}</p>\n+            <p className={s.index}>{arabToRoman(index + 1)}</p>\n             <p className={s.heading}>{question}</p>\n \n             <Image\n                alt=\"Photo\"\n"
                },
                {
                    "date": 1695040720731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import {PropsWithChildren, useState} from \"react\";\n import {motion, AnimatePresence} from \"framer-motion\"\n import Heading from \"@/components/Shared/Heading\";\n import Image from \"next/image\";\n+// @ts-ignore\n import {arabToRoman} from \"roman-numbers\"\n \n type Question = {\n    question: string,\n"
                }
            ],
            "date": 1695035485873,
            "name": "Commit-0",
            "content": "import s from './index.module.scss'\nimport {transformIndex} from \"@/utils/transformIndex\";\nimport {PropsWithChildren, useState} from \"react\";\nimport {motion, AnimatePresence} from \"framer-motion\"\nimport Heading from \"@/components/Shared/Heading\";\nimport Image from \"next/image\";\n\ntype Question = {\n   question: string,\n   answer: string,\n}\n\ntype Faq = {\n   heading: string,\n   questions: Question [],\n}\n\nfunction SingleQuestion({\n                           content,\n                           isLast,\n                           index\n                        }: PropsWithChildren<{ content: Question, isLast: boolean, index: number }>) {\n   const [isOpen, setIsOpen] = useState(false);\n\n   const {question, answer} = content;\n   return (\n      <div\n         className={isLast ? s.singleQuestion : s.singleQuestionLast}\n         onClick={() => setIsOpen((prev) => !prev)}\n      >\n         <div className={s.headingWrapper}>\n            <p className={s.index}>{transformIndex(index + 1)}</p>\n            <p className={s.heading}>{question}</p>\n\n            <Image\n               alt=\"Photo\"\n               src=\"/icons/triangle.png\"\n               style={{transform: `rotate(${isOpen ? \"180deg\" : \"0\"})`, transition: '0.3s'}}\n               width={10}\n               height={10}\n            />\n         </div>\n\n         <AnimatePresence mode=\"wait\">\n            {isOpen && (\n               <motion.div\n                  initial={{\n                     height: 0,\n                     opacity: 0,\n                  }}\n                  animate={{\n                     height: \"auto\",\n                     opacity: 1,\n                     transition: {\n                        height: {\n                           duration: 0.4,\n                        },\n                        opacity: {\n                           duration: 0.25,\n                           delay: 0.15,\n                        },\n                     },\n                  }}\n                  exit={{\n                     height: 0,\n                     opacity: 0,\n                     transition: {\n                        height: {\n                           duration: 0.4,\n                        },\n                        opacity: {\n                           duration: 0.25,\n                        },\n                     },\n                  }}\n                  key=\"test\"\n               >\n                  <span className={s.desc}>{answer}</span>\n               </motion.div>\n            )}\n         </AnimatePresence>\n      </div>\n   )\n}\n\n\nexport default function Faq({content}: PropsWithChildren<{ content: Faq }>) {\n   const {heading, questions} = content;\n   return (\n      // @ts-ignore\n      <section className={s.wrapper} name={\"faq\"}>\n         <Heading heading={heading} size={\"md\"}/>\n\n         <div className={s.questionsWrapper}>\n            {questions.map((question: Question, index, arr) => (\n               <SingleQuestion\n                  key={index}\n                  content={question}\n                  isLast={index != arr.length - 1}\n                  index={index}\n               />\n            ))}\n         </div>\n      </section>\n   )\n}"
        }
    ]
}